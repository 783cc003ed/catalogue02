{
    "commits_count": 3,
    "date_started": "2018-04-29",
    "date_updated": "2018-04-30",
    "description": "Node.js &amp;amp; MySQL   Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this week. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.   Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a README.md file.   Include screenshots (or a video) of typical user flows through your application (for the customer and if relevant the...",
    "forks_count": 1,
    "html_url": "https://github.com/spt3gntlmn/MySQL-Homework",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "MySQL-Homework",
    "repo_owner": "spt3gntlmn",
    "repotime": "2018-04-30, 11:18:20",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 15,
    "date_started": "2017-09-01",
    "date_updated": "2018-04-29",
    "description": "dork scanner with Sqli and Lfi testing",
    "forks_count": 14,
    "html_url": "https://github.com/nycto-hackerone/nycto-dork",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "nycto-dork",
    "repo_owner": "nycto-hackerone",
    "repotime": "2018-04-29, 22:49:17",
    "stargazers_count": 29,
    "watchers_count": 29
}
{
    "commits_count": 10,
    "date_started": "2018-04-27",
    "date_updated": "2018-04-28",
    "description": " Inject a .NET assembly into a native process using the CLR Hosting API",
    "forks_count": 5,
    "html_url": "https://github.com/Vacko/Managed-code-injection",
    "keywords": [
        "code injection"
    ],
    "language": "C++",
    "repo_name": "Managed-code-injection",
    "repo_owner": "Vacko",
    "repotime": "2018-04-28, 15:09:22",
    "stargazers_count": 20,
    "watchers_count": 20
}
{
    "commits_count": 3,
    "date_started": "2018-04-26",
    "date_updated": "2018-04-27",
    "description": "0day huawei exploit",
    "forks_count": 4,
    "html_url": "https://github.com/SaneuForward/huawei",
    "keywords": [
        "0day exploit",
        "0day exploitation"
    ],
    "language": "Python",
    "repo_name": "huawei",
    "repo_owner": "SaneuForward",
    "repotime": "2018-04-27, 00:45:42",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 17,
    "date_started": "2018-04-24",
    "date_updated": "2018-04-25",
    "description": "CVE-2018-6574 POC : golang 'go get' remote command execution during source code build",
    "forks_count": 13,
    "html_url": "https://github.com/neargle/Go-Get-RCE-CVE-2018-6574-POC",
    "keywords": [
        "rce poc",
        "remote code execution poc"
    ],
    "language": "C",
    "repo_name": "Go-Get-RCE-CVE-2018-6574-POC",
    "repo_owner": "neargle",
    "repotime": "2018-04-25, 00:32:22",
    "stargazers_count": 24,
    "watchers_count": 24
}
{
    "commits_count": 9,
    "date_started": "2018-04-22",
    "date_updated": "2018-04-23",
    "description": "Common WiFi Manager for not hard coding the WiFi SSID and Password",
    "forks_count": 0,
    "html_url": "https://github.com/rid47/WiFi-Manager",
    "keywords": [
        "hard coded password"
    ],
    "language": "C++",
    "repo_name": "WiFi-Manager",
    "repo_owner": "rid47",
    "repotime": "2018-04-23, 15:43:28",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 1,
    "date_started": "2020-03-29",
    "date_updated": "2018-04-21",
    "description": "Trigger DWM memory leaking bug in Win10 Fall Creator Update (ver 1709).",
    "forks_count": 0,
    "html_url": "https://github.com/qiyunshan/Win10-1709-DwmMemLeak-TransparencyKey",
    "keywords": [
        "Win memory leak"
    ],
    "language": null,
    "repo_name": "Win10-1709-DwmMemLeak-TransparencyKey",
    "repo_owner": "qiyunshan",
    "repotime": "2018-04-21, 16:50:18",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 272,
    "date_started": "2015-03-07",
    "date_updated": "2018-04-20",
    "description": "PowerForensics provides an all in one platform for live disk forensic analysis",
    "forks_count": 275,
    "html_url": "https://github.com/Invoke-IR/PowerForensics",
    "keywords": [
        "by_owner"
    ],
    "language": "C#",
    "repo_name": "PowerForensics",
    "repo_owner": "Invoke-IR",
    "repotime": "2018-04-20, 03:34:59",
    "stargazers_count": 1397,
    "watchers_count": 1397
}
{
    "commits_count": 1,
    "date_started": "2018-04-19",
    "date_updated": "2018-04-19",
    "description": "macOS 10.13.3 (17D47) Safari Wasm Exploit ",
    "forks_count": 28,
    "html_url": "https://github.com/FSecureLABS/CVE-2018-4121",
    "keywords": [
        "by_owner"
    ],
    "language": "JavaScript",
    "repo_name": "CVE-2018-4121",
    "repo_owner": "FSecureLABS",
    "repotime": "2018-04-19, 12:15:13",
    "stargazers_count": 119,
    "watchers_count": 119
}
{
    "commits_count": 79,
    "date_started": "2012-07-24",
    "date_updated": "2018-04-17",
    "description": "An automatic XSS discovery tool",
    "forks_count": 119,
    "html_url": "https://github.com/gbrindisi/xsssniper",
    "keywords": [
        "xss"
    ],
    "language": "Python",
    "repo_name": "xsssniper",
    "repo_owner": "gbrindisi",
    "repotime": "2018-04-17, 10:12:36",
    "stargazers_count": 403,
    "watchers_count": 403
}
{
    "commits_count": 3,
    "date_started": "2018-04-16",
    "date_updated": "2018-04-16",
    "description": " Cross Referencing Tables and Forms Used by a Form      [Back]  Here is a unix script, formtables.shl, which shows which tables are used by the given Oracle form, and how they are used (Select or List of values (LOV), Update, Insert, Delete, or undetermined), which can be used on .fmb (form) and .pll (library) files.   It parses the strings in the form file, and makes a best guess effort in determining the tables used by the form, matching the string patterns against a file listing the non-system tables in the database (generated by formtables.sql).   Since it doesn't analyze the code or trace through the function calls in the attached libraries, or look at database triggers for side effects of table changes, it may not find some table references, but, it does a pretty good job on most form files.   For Banner users, it also shows which forms are called by this form, including form access (query only, etc.).  You will first need to run formtables.sql from sqlplus (using @formtables.sql...",
    "forks_count": 0,
    "html_url": "https://github.com/hmont3n3p/BannerInverseEngineering",
    "keywords": [
        "cross-side-scripting"
    ],
    "language": null,
    "repo_name": "BannerInverseEngineering",
    "repo_owner": "hmont3n3p",
    "repotime": "2018-04-16, 00:07:48",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 2,
    "date_started": "2018-12-15",
    "date_updated": "2018-04-16",
    "description": "&amp;&#35;35; 1. MAGENTO 2 MARKETPLACE SOCIAL LOGIN PLUGIN Purchasing [Magento 2 Marketplace Social Login Plugin](https://landofcoder.com/magento2-marketplace-social-login.html/)   Our product would definitely be a good solution for customer’s irritation when being asked to waste their time on filling in username and password boxes. Magento 2 Market Place Login Plugin allows both sellers and customers to login Marketplace Multi Vendor site by their own common social account as Facebook, Google, Twitter, Linkedin, Instagram. All you have to do is picking one of the social networks you have logged in and wait a second for being automatically signed in with amazingly all of your existing information.  This is a plugin of [Magento 2 Marketplace Extension](https://landofcoder.com/magento-2-marketplace-extension.html/). To use this module smoothly, you must install Magento 2 Marketplace Module first.      &amp;&#35;35;&amp;&#35;35; 2. Documentation  - Installation guide: https://blog.landofcoder.com/magento-2-insta...",
    "forks_count": 6,
    "html_url": "https://github.com/dfraser74/magento2-marketplace-social-login",
    "keywords": [
        "Windows use after free"
    ],
    "language": null,
    "repo_name": "magento2-marketplace-social-login",
    "repo_owner": "dfraser74",
    "repotime": "2018-04-16, 09:29:34",
    "stargazers_count": 14,
    "watchers_count": 14
}
{
    "commits_count": 5,
    "date_started": "2018-04-13",
    "date_updated": "2018-04-13",
    "description": "LFI scanner tool used at PentestCloud.io",
    "forks_count": 7,
    "html_url": "https://github.com/clicknull/LFI-scanner",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "LFI-scanner",
    "repo_owner": "clicknull",
    "repotime": "2018-04-13, 17:27:16",
    "stargazers_count": 4,
    "watchers_count": 4
}
{
    "commits_count": 2,
    "date_started": "2018-04-13",
    "date_updated": "2018-04-13",
    "description": "几个UAC Bypass的方法",
    "forks_count": 9,
    "html_url": "https://github.com/sugice/UAC-Bypass",
    "keywords": [
        "uac bypass"
    ],
    "language": "C++",
    "repo_name": "UAC-Bypass",
    "repo_owner": "sugice",
    "repotime": "2018-04-13, 17:35:10",
    "stargazers_count": 12,
    "watchers_count": 12
}
{
    "commits_count": 2,
    "date_started": "2018-04-13",
    "date_updated": "2018-04-13",
    "description": "Demonstration on session hijacking vulnerability",
    "forks_count": 2,
    "html_url": "https://github.com/AndrejWeb/session-hijacking",
    "keywords": [
        "session vulnerability",
        "session hijacking vulnerability",
        "session hijacking"
    ],
    "language": "PHP",
    "repo_name": "session-hijacking",
    "repo_owner": "AndrejWeb",
    "repotime": "2018-04-13, 04:45:26",
    "stargazers_count": 5,
    "watchers_count": 5
}
{
    "commits_count": 10,
    "date_started": "2016-10-18",
    "date_updated": "2018-04-10",
    "description": "A project to spoof my own html code instead of a real server's response to a GET request.",
    "forks_count": 1,
    "html_url": "https://github.com/mets634/TCP-session-hijacker",
    "keywords": [
        "spoofing session"
    ],
    "language": "Python",
    "repo_name": "TCP-session-hijacker",
    "repo_owner": "mets634",
    "repotime": "2018-04-10, 16:56:04",
    "stargazers_count": 4,
    "watchers_count": 4
}
{
    "commits_count": 4,
    "date_started": "2018-04-09",
    "date_updated": "2018-04-10",
    "description": "Android Blueborne vuln. to remote code execution with android 6.0.1 offsets",
    "forks_count": 0,
    "html_url": "https://github.com/helloitu/blueborne-poc-android6",
    "keywords": [
        "remote code execution poc"
    ],
    "language": "Python",
    "repo_name": "blueborne-poc-android6",
    "repo_owner": "helloitu",
    "repotime": "2018-04-10, 02:11:55",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 85,
    "date_started": "2017-06-09",
    "date_updated": "2018-04-08",
    "description": "Totally Automatic LFI Exploiter (+ Reverse Shell) and Scanner ",
    "forks_count": 401,
    "html_url": "https://github.com/D35m0nd142/LFISuite",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "LFISuite",
    "repo_owner": "D35m0nd142",
    "repotime": "2018-04-08, 12:30:09",
    "stargazers_count": 1793,
    "watchers_count": 1793
}
{
    "commits_count": 21,
    "date_started": "2018-04-03",
    "date_updated": "2018-04-06",
    "description": "Should work from Windows 7 to Latest Windows 10 FCU",
    "forks_count": 7,
    "html_url": "https://github.com/websecnl/UAC-Bypass-Exploit",
    "keywords": [
        "uac bypass"
    ],
    "language": "Python",
    "repo_name": "UAC-Bypass-Exploit",
    "repo_owner": "websecnl",
    "repotime": "2018-04-06, 14:57:15",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 10,
    "date_started": "2017-05-31",
    "date_updated": "2018-04-05",
    "description": "A script to randomize Cobalt Strike Malleable C2 profiles and reduce the chances of flagging signature-based detection controls",
    "forks_count": 87,
    "html_url": "https://github.com/bluscreenofjeff/Malleable-C2-Randomizer",
    "keywords": [
        "by_owner"
    ],
    "language": "Python",
    "repo_name": "Malleable-C2-Randomizer",
    "repo_owner": "bluscreenofjeff",
    "repotime": "2018-04-05, 18:56:25",
    "stargazers_count": 443,
    "watchers_count": 443
}
{
    "commits_count": 7,
    "date_started": "2018-03-12",
    "date_updated": "2018-04-02",
    "description": "A Technique for Preventing SQL Injection Attack and Session Hijacking using Hashing",
    "forks_count": 0,
    "html_url": "https://github.com/rrayaprolu/sessionhijacking",
    "keywords": [
        "session hijacking attack",
        "session attack",
        "session hijacking"
    ],
    "language": "HTML",
    "repo_name": "sessionhijacking",
    "repo_owner": "rrayaprolu",
    "repotime": "2018-04-02, 11:26:41",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 7,
    "date_started": "2017-11-07",
    "date_updated": "2018-04-01",
    "description": "Remote Code Execution exploiter",
    "forks_count": 6,
    "html_url": "https://github.com/websecnl/RCE_Universal_Exploiter",
    "keywords": [
        "remote code execution exploitation",
        "remote code execution exploit"
    ],
    "language": "Python",
    "repo_name": "RCE_Universal_Exploiter",
    "repo_owner": "websecnl",
    "repotime": "2018-04-01, 12:14:55",
    "stargazers_count": 1,
    "watchers_count": 1
}
