{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 39,
    "date_started": "2014-11-13",
    "date_updated": "2014-11-26",
    "description": "Yet another code injection library for macOS",
    "forks_count": 8,
    "html_url": "https://github.com/rodionovd/task_vaccine",
    "keywords": [
        "code injection"
    ],
    "language": "C",
    "repo_name": "task_vaccine",
    "repo_owner": "rodionovd",
    "repotime": "2014-11-26, 22:15:58",
    "stargazers_count": 54,
    "watchers_count": 54
}
{
    "commits_count": 22,
    "date_started": "2017-09-28",
    "date_updated": "2014-11-25",
    "description": "This is a pack of Cortana scripts commonly used on our pentests.",
    "forks_count": 0,
    "html_url": "https://github.com/HarmJoy/cortana",
    "keywords": [
        "by_owner"
    ],
    "language": "PowerShell",
    "repo_name": "cortana",
    "repo_owner": "HarmJoy",
    "repotime": "2014-11-25, 00:37:54",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2013-12-21",
    "date_updated": "2014-11-19",
    "description": "LFI scan, exploit tool",
    "forks_count": 5,
    "html_url": "https://github.com/m101/lfipwn",
    "keywords": [
        "lfi"
    ],
    "language": "Python",
    "repo_name": "lfipwn",
    "repo_owner": "m101",
    "repotime": "2014-11-19, 03:26:34",
    "stargazers_count": 13,
    "watchers_count": 13
}
{
    "commits_count": 14,
    "date_started": "2013-07-10",
    "date_updated": "2014-11-17",
    "description": "<no description>",
    "forks_count": 6,
    "html_url": "https://github.com/FSecureLABS/jar-agent",
    "keywords": [
        "by_owner"
    ],
    "language": "Java",
    "repo_name": "jar-agent",
    "repo_owner": "FSecureLABS",
    "repotime": "2014-11-17, 08:49:08",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 7,
    "date_started": "2014-11-20",
    "date_updated": "2014-11-04",
    "description": " &amp;&#35;35; This scripts is edited under the General Public License as defined by the Free software foundation.  &amp;&#35;35; This package is distributed in the hope that it will be useful, but without any warranty; It can be used and modified and shared but should be referenced to, it CANNOT be  &amp;&#35;35; sold or be used for a commercial-economical purpose. &amp;&#35;35; See the details in the file LICENCE.txt that is situated in the folder of the script or visit http://gplv3.fsf.org/ )  &amp;&#35;35; The discovery of One algorithm used in WPSPIN have been made parallely and previously by zhaochunsheng in a C. script named computepinC83A35. as i don't known C or &amp;&#35;35; programming and found this out after coding the first version of WPS, this bash script doesn't use a dingle line of computepinC83A35. &amp;&#35;35; But it had to be saved that zhaochunsheng found the main algorithm on Chinese access points months before I found it on a new Belkin N router, without knowing it works. &amp;&#35;35; The page of the author is sadly down an...",
    "forks_count": 34,
    "html_url": "https://github.com/linkp2p/WPS-PIN",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "Shell",
    "repo_name": "WPS-PIN",
    "repo_owner": "linkp2p",
    "repotime": "2014-11-04, 15:59:47",
    "stargazers_count": 59,
    "watchers_count": 59
}
{
    "commits_count": 10,
    "date_started": "2014-10-31",
    "date_updated": "2014-11-04",
    "description": "Responsive Chrome Extension Detection",
    "forks_count": 0,
    "html_url": "https://github.com/cobbspur/RCED",
    "keywords": [
        "Chrome rce"
    ],
    "language": "JavaScript",
    "repo_name": "RCED",
    "repo_owner": "cobbspur",
    "repotime": "2014-11-04, 14:53:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-03",
    "date_updated": "2014-11-03",
    "description": "Graph Report   In this report, I will discuss how I went about creating my Gephi Graph, and will then discuss the network, and the connections of the graph.  Creating the Graph  To create the graph, I used a tool called Gephi. Gephi is an open source network analysis and visualization software application, available for free download online. Gephi allows the user to work with complex data and produce valuable, attractive visual results.   I used my personal Facebook network as the data to input into Gephi. To do this I used “Netvizz”. Netvizz is an online Facebook application that allows you to create a GDF file, which is compatible with Gephi, of all your Facebook connections. After retrieving the GDF file, I saved it to my computer and opened Gephi.   When the GDF file is inputted initially to Gephi, the data is all clumped together in a concentrated area that resembles something like an intricate rubber band ball. To make sense of the connections, I clicked into the Layout module an...",
    "forks_count": 0,
    "html_url": "https://github.com/shmoboat/Gephi-Graph-Report-Sophie-Nolan-",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "Gephi-Graph-Report-Sophie-Nolan-",
    "repo_owner": "shmoboat",
    "repotime": "2014-11-03, 11:35:37",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2014-11-01",
    "date_updated": "2014-11-01",
    "description": "Just an attempted proof of concept that there could be a memory leak in python-requests",
    "forks_count": 0,
    "html_url": "https://github.com/mhjohnson/memory-profiling-requests",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "Python",
    "repo_name": "memory-profiling-requests",
    "repo_owner": "mhjohnson",
    "repotime": "2014-11-01, 17:31:57",
    "stargazers_count": 0,
    "watchers_count": 0
}
